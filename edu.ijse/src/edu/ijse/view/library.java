/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.ijse.view;

import edu.ijse.controller.LibraryController;
import edu.ijse.controller.OrderController;
import edu.ijse.dto.BookDto;
import edu.ijse.dto.BorrowingsDto;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MSI
 */
public class library extends javax.swing.JFrame {
    private static LibraryController libraryController;
    private static ArrayList<BorrowingsDto> borrowingDtos;
    private static OrderController orderController;
    /**
     * Creates new form library
     */
    public library() {
        initComponents();
        libraryController=new LibraryController();
        borrowingDtos=new ArrayList<>();
        orderController=new OrderController();
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBooks = new javax.swing.JTable();
        lblAvailableBooks = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCart = new javax.swing.JTable();
        lblAvailableBooks1 = new javax.swing.JLabel();
        lblReturnBook = new javax.swing.JLabel();
        lblMemberId = new javax.swing.JLabel();
        txtMemberId = new javax.swing.JTextField();
        lblBookId = new javax.swing.JLabel();
        txtBookId = new javax.swing.JTextField();
        lblBorrowDate = new javax.swing.JLabel();
        lblReturnDueDate = new javax.swing.JLabel();
        lblFine = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        btnAddToCart = new javax.swing.JButton();
        btnReturn = new javax.swing.JButton();
        btnPlaceOrder = new javax.swing.JButton();
        lblOrderId = new javax.swing.JLabel();
        txtOrderId = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Library");

        tblBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblBooks);

        lblAvailableBooks.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lblAvailableBooks.setText("Available Books");

        tblCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblCart);

        lblAvailableBooks1.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lblAvailableBooks1.setText("Cart");

        lblReturnBook.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lblReturnBook.setText("Return Book");

        lblMemberId.setText("Member Id");

        lblBookId.setText("Book Id");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnAddToCart.setText("Add to Cart");
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });

        btnReturn.setText("Return");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        btnPlaceOrder.setText("Place Order");
        btnPlaceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaceOrderActionPerformed(evt);
            }
        });

        lblOrderId.setText("Order Id");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(105, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnPlaceOrder)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblAvailableBooks, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(lblOrderId, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtOrderId, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(103, 103, 103))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblAvailableBooks1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAddToCart))))
                        .addGap(126, 126, 126))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnReturn)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblBorrowDate, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(lblReturnDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(lblFine, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(31, 31, 31))
                                .addComponent(lblReturnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblMemberId, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtMemberId, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(39, 39, 39)
                                    .addComponent(lblBookId, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtBookId, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(39, 39, 39)
                                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(101, 101, 101))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOrderId, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOrderId, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblAvailableBooks, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(lblAvailableBooks1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(btnAddToCart, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPlaceOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblReturnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblMemberId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMemberId, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblBookId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtBookId, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBorrowDate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblReturnDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFine, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(166, Short.MAX_VALUE))
        );

        jScrollPane3.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 887, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 711, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        searchReturnBook();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        addToCart();
    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void btnPlaceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaceOrderActionPerformed
        placeOrder();
    }//GEN-LAST:event_btnPlaceOrderActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        returnBook();
    }//GEN-LAST:event_btnReturnActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(library.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(library.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(library.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(library.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new library().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JButton btnPlaceOrder;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblAvailableBooks;
    private javax.swing.JLabel lblAvailableBooks1;
    private javax.swing.JLabel lblBookId;
    private javax.swing.JLabel lblBorrowDate;
    private javax.swing.JLabel lblFine;
    private javax.swing.JLabel lblMemberId;
    private javax.swing.JLabel lblOrderId;
    private javax.swing.JLabel lblReturnBook;
    private javax.swing.JLabel lblReturnDueDate;
    private javax.swing.JTable tblBooks;
    private javax.swing.JTable tblCart;
    private javax.swing.JTextField txtBookId;
    private javax.swing.JTextField txtMemberId;
    private javax.swing.JTextField txtOrderId;
    // End of variables declaration//GEN-END:variables

    public void loadTable(){
        try{
            String columns[]={"Book Id","Book Name","Category Id","Book Author","Book Price"};
            DefaultTableModel dtm=new DefaultTableModel(columns,0){
            public boolean isCellEditable(int row,int column){
                return false;
            }};
            DefaultTableModel dtm2=new DefaultTableModel(columns,0){
            public boolean isCellEditable(int row,int column){
                return false;
            }};
            tblBooks.setModel(dtm);
            tblCart.setModel(dtm2);
            ArrayList<BookDto> bookDtos=libraryController.getAll();
            for (BookDto bookDto : bookDtos) {
                Object[] rowData={bookDto.getId(),
                    bookDto.getName(),
                    bookDto.getCategoryId(),
                    bookDto.getAuthor(),
                    bookDto.getPrice()};
                dtm.addRow(rowData);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,"Error at loading data to the table");
        }
    }
    
    public void searchBook(){
        try {
            String bookId=txtBookId.getText();
            String memberId=txtMemberId.getText();
            Double fine=0.0;
            BorrowingsDto borrowingDto=libraryController.searchBorrowing(memberId,bookId);
            if(borrowingDto!=null){
                lblBorrowDate.setText("BorrowDate= "+borrowingDto.getBorrowDate());
                lblReturnDueDate.setText("Return Due Date: "+bookId);
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String borrowDate = sdf.format(borrowingDto.getBorrowDate());
                String currentDate = sdf.format(new Date());
                Date olderDateObj = sdf.parse(borrowDate);
                Date currentDateObj = sdf.parse(currentDate);
                Calendar startCalendar = Calendar.getInstance();
                Calendar endCalendar = Calendar.getInstance();
                startCalendar.setTime(olderDateObj);
                endCalendar.setTime(currentDateObj);

                int yearDifference = endCalendar.get(Calendar.YEAR) - startCalendar.get(Calendar.YEAR);
                int monthDifference = endCalendar.get(Calendar.MONTH) - startCalendar.get(Calendar.MONTH);
                int totalMonths = yearDifference * 12 + monthDifference;
                if(totalMonths>6){
                    lblFine.setText("100");
                }else{
                    lblFine.setText("0");
                }
            }else{
                JOptionPane.showMessageDialog(this, "Error Occured in Searching Book");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error Occured in Searching Book");
        }
    }
    public void addToCart(){
        try {
            DefaultTableModel dtm=(DefaultTableModel) tblCart.getModel();
            
            String bookId = tblBooks.getValueAt(tblBooks.getSelectedRow(), 0).toString();
            BookDto bookDto=libraryController.getBookDto(bookId);
            if(bookDto!=null){
                Object rowData[]={bookDto.getId(),bookDto.getName(),bookDto.getCategoryId(),bookDto.getAuthor(),bookDto.getPrice()};
                dtm.addRow(rowData);
                SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
                String date=sdf.format(new Date());
                Calendar calendar = Calendar.getInstance();
                calendar.setTime(new Date());
                calendar.add(Calendar.MONTH, 6);
                Date deadlineDate = calendar.getTime();
                String deadline = sdf.format(deadlineDate);
                BorrowingsDto borrowingDto=new BorrowingsDto(txtOrderId.getText(),UserLogin.returnUserId(),bookDto.getId(),date,deadline);
                borrowingDtos.add(borrowingDto);
            }else{
                JOptionPane.showMessageDialog(this, "Error Occured at Adding Book to Cart");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error Occured at Adding Book to Cart");
        }
    }
    public void placeOrder(){
        try {
            String resp=orderController.placeOrder(borrowingDtos);
            DefaultTableModel model=(DefaultTableModel) tblCart.getModel();
            model.setRowCount(0);
            clearForm();
            JOptionPane.showMessageDialog(this, resp);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error at Place Order");
        }
    }
    public void clearForm(){
       txtOrderId.setText("");
       
    }
    
    public void searchReturnBook(){
        try {
            String memberID=txtMemberId.getText();
            String bookId=txtBookId.getText();
            Double fine=0.0;
            BorrowingsDto borrowingDto=libraryController.searchBorrowing(memberID, bookId);
            lblBorrowDate.setText("Borrow Date= "+borrowingDto.getBorrowDate());
            lblReturnDueDate.setText("Due Date= "+borrowingDto.getDueDate());
            SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
            Date currentDate=new Date();
            String returnedDueDate=borrowingDto.getDueDate();
            Date dueDate=sdf.parse(returnedDueDate);
            if(currentDate.after(dueDate)){
                fine=100.0;
            }
            String resp=orderController.updateFine(fine,borrowingDto.getBorrowindId(),borrowingDto.getMemberId());
            lblFine.setText("Fine "+fine);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    public void returnBook(){
            try {
                String memberID=txtMemberId.getText();
                String bookId=txtBookId.getText();
                Double fine=0.0;
                BorrowingsDto borrowingDto=libraryController.searchBorrowing(memberID, bookId);
                SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
                Date currentDate=new Date();
                String returnedDueDate=borrowingDto.getDueDate();
                Date dueDate=sdf.parse(returnedDueDate);
                if(currentDate.after(dueDate)){
                    fine=100.0;
                }
                String resp=orderController.updateFine(fine,borrowingDto.getBorrowindId(),borrowingDto.getMemberId());
                lblFine.setText("Fine "+fine);
                JOptionPane.showMessageDialog(this, resp);
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error at Returning Book");
        }
    }
}
